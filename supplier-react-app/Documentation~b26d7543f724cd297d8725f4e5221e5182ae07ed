# SupplierForm.js: Supplier Creation Form

## Overview
This file defines a React component for creating a supplier. It includes form fields for supplier details, validation logic for the Brazilian CNPJ (Cadastro Nacional da Pessoa JurÃ­dica), and integration with a service to persist supplier data.

## Process Flow

```mermaid
flowchart TD
    Start("User Opens Form") --> InputFields["User Fills Input Fields"]
    InputFields --> Validation{"Validate Input"}
    Validation -->|"All Fields Valid"| Submit["Submit Form"]
    Validation -->|"Invalid Input"| ErrorDisplay["Display Error Message"]
    Submit --> CallService["Call createSupplier Service"]
    CallService -->|"Success"| ResetForm["Reset Form"]
    CallService -->|"Failure"| ErrorDisplay
```


## Insights
- **State Management**: The component uses React's `useState` to manage form data and error messages.
- **CNPJ Validation**: Implements a custom algorithm to validate the Brazilian CNPJ format, ensuring it adheres to the required structure and checksum.
- **Error Handling**: Displays error messages for invalid input or failed service calls.
- **Input Masking**: Utilizes the `react-input-mask` library to enforce a specific format for the CNPJ field.
- **Service Integration**: Calls the `createSupplier` service to persist supplier data.

## Dependencies

```mermaid
flowchart LR
    SupplierForm --- |"Imports"| React
    SupplierForm --- |"Imports"| useState
    SupplierForm --- |"Imports"| InputMask
    SupplierForm --- |"Calls"| createSupplier
```


- `React`: Provides the base framework for building the component.
- `useState`: Manages state for form data and error messages.
- `InputMask`: Masks the CNPJ input field to enforce a specific format.
- `createSupplier`: Sends supplier data to the backend for persistence.

## Data Manipulation (SQL)
Not applicable. This component does not directly interact with a database.
